from typing import List, Union
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from datetime import datetime

import config
from config import PAID1, PAID2, PAID3

from database import services as db, tables


def create_user_key_board():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(
        text="–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data="create_account")
    )
    return keyboard


def cancel_inline_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(
        text="–û—Ç–º–µ–Ω–∞", callback_data="something_cancel")
    )
    return keyboard


def yes_no_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(
            text="–î–∞", callback_data="yes_delete"),
        InlineKeyboardButton(
            text="–ù–µ—Ç", callback_data="no_delete"
        )
    )
    return keyboard


def update_profile_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(
            text="–ò–º—è", callback_data="name_update"),
        InlineKeyboardButton(
            text="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", callback_data="date_update"
        )
    )
    keyboard.row(
        InlineKeyboardButton(
            text="–û—Ç–º–µ–Ω–∞", callback_data="something_cancel"
        )
    )
    return keyboard


def admins_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(
            text="–°–æ–±—ã—Ç–∏—èüéâ", callback_data="admin_events"),
        InlineKeyboardButton(
            text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏üë•", callback_data="admin_users"),
    )
    keyboard.row(
        InlineKeyboardButton(
            text="–î–æ–±–∞–≤. —Å–æ–±—ã—Ç–∏–µ‚ûï", callback_data="admin_add-event"
        ),
        InlineKeyboardButton(
            text="–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑.üôÖ‚Äç‚ôÇÔ∏è", callback_data="admin_delete-user"),
    )

    keyboard.row(
        InlineKeyboardButton(
            text="–£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ‚ûñ", callback_data="admin_delete-event"
        ),
        InlineKeyboardButton(
            text="–û–ø–æ–≤–µ—â–µ–Ω–∏—èüîî", callback_data="admin_ping"),
    )
    return keyboard


def all_events_keyboard(events: List[tables.Event]):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–æ –≤—Å–µ–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏"""
    keyboard = InlineKeyboardBuilder()

    for event in events:
        if event.title == "birthday":
            event_user = db.get_user_by_id(event.user_id)
            keyboard.row(
                InlineKeyboardButton(
                    text=f"{datetime.strftime(event.event_date, '%d.%m.%Y')} {event_user.user_name}",
                    callback_data=f"event_{event.id}"),
            )
        else:
            keyboard.row(
                InlineKeyboardButton(
                    text=f"{datetime.strftime(event.event_date, '%d.%m.%Y')} {event.title}",
                    callback_data=f"event_{event.id}"),
            )
    keyboard.adjust(2)

    keyboard.row(
        InlineKeyboardButton(
            text="<<–ù–∞–∑–∞–¥", callback_data="admin_back-b"
        )
    )
    return keyboard


def all_users_keyboard_to_delete(users: List[tables.User]):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = InlineKeyboardBuilder()
    for user in users:
        keyboard.row(
            InlineKeyboardButton(
                text=f"{user.user_name} {datetime.strftime(user.birthday_date, '%d.%m.%Y')} ",
                callback_data=f"user-delete_{user.id}"),
        )
    keyboard.adjust(2)

    keyboard.row(
        InlineKeyboardButton(
            text="<<–ù–∞–∑–∞–¥", callback_data="admin_back-b"
        )
    )
    return keyboard


def yes_no_admin_keyboard(param: Union[int, str]):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(
            text="–î–∞", callback_data=f"yes_{param}"),
        InlineKeyboardButton(
            text="–ù–µ—Ç", callback_data=f"no_{param}"
        )
    )
    return keyboard


def back_admin_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –Ω–∞–∑–∞–¥"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(
            text="<<–ù–∞–∑–∞–¥", callback_data="admin_back-b"
        )
    )
    return keyboard


def payer_info_admin_keyboard(event: tables.Event, payer_users: List[tables.User]):
    """–ö–ª–∞–∏–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–ø–ª–∞—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    keyboard = InlineKeyboardBuilder()

    for payer in event.payers:
        for user in payer_users:
            if payer.user_id == user.id:
                if not payer.payment_status:
                    keyboard.add(InlineKeyboardButton(
                        text=f"{user.user_name}",
                        callback_data=f"admin-payer_{payer.id}"
                    ))

    keyboard.adjust(2)

    if event.title != "birthday":
        keyboard.row(
            InlineKeyboardButton(
                text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è>>",
                callback_data=f"update-event-title_{event.id}"
            )
        )

    keyboard.row(
        InlineKeyboardButton(
            text="–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è>>",
            callback_data=f"update-event-date_{event.id}"
        )
    )

    keyboard.row(
        InlineKeyboardButton(
            text="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–æ–±—ã—Ç–∏—è>>",
            callback_data=f"update-event-phone_{event.id}"
        )
    )

    keyboard.row(InlineKeyboardButton(
            text="<<–ù–∞–∑–∞–¥",
            callback_data="admin_events"
        )
    )

    return keyboard


def add_payment_admin_keyboard(payer_id: int, event_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(InlineKeyboardButton(
        text="–í–Ω–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É",
        callback_data=f"add-pay_{payer_id}"
    ))

    keyboard.row(InlineKeyboardButton(
            text="<<–ù–∞–∑–∞–¥",
            callback_data=f"event_{event_id}"
        )
    )
    return keyboard


def add_event_admin_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –æ—Ç –ª–∏—Ü–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(
            text="–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",
            callback_data=f"add-event_birthday"
        ),
        InlineKeyboardButton(
            text="–î—Ä—É–≥–æ–µ",
            callback_data=f"add-event_other"
        )
    )

    keyboard.row(InlineKeyboardButton(
            text="<<–ù–∞–∑–∞–¥",
            callback_data="admin_back"
        )
    )
    return keyboard


def all_users_keyboard_for_event_creating(users: List[tables.User]):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è"""
    keyboard = InlineKeyboardBuilder()
    for user in users:
        keyboard.row(
            InlineKeyboardButton(
                text=f"{user.user_name} {datetime.strftime(user.birthday_date, '%d.%m.%Y')} ",
                callback_data=f"user-event_{user.id}"),
        )
    keyboard.adjust(2)

    keyboard.row(
        InlineKeyboardButton(
            text="<<–ù–∞–∑–∞–¥", callback_data="admin_add-event"
        )
    )
    return keyboard


def all_users_keyboard_for_except_from_event(users: List[tables.User]):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–±—ã—Ç–∏—è"""
    keyboard = InlineKeyboardBuilder()
    for user in users:
        keyboard.row(
            InlineKeyboardButton(
                text=f"{user.user_name} {datetime.strftime(user.birthday_date, '%d.%m.%Y')} ",
                callback_data=f"user-event-except_{user.id}"),
        )
    keyboard.adjust(2)
    keyboard.row(
        InlineKeyboardButton(
            text="–£—á–µ—Å—Ç—å –≤—Å–µ—Ö", callback_data="user-event-except_all"
        )
    )
    keyboard.row(
        InlineKeyboardButton(
            text="–û—Ç–º–µ–Ω–∞", callback_data="something_cancel"
        )
    )
    return keyboard


def admin_pay_keyboard():
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text=f"{PAID1}", callback_data=f"paid_{PAID1}"),
        InlineKeyboardButton(text=f"{PAID2}", callback_data=f"paid_{PAID2}"),
        InlineKeyboardButton(text=f"{PAID3}", callback_data=f"paid_{PAID3}"),
    )

    keyboard.row(InlineKeyboardButton(
        text="–û—Ç–º–µ–Ω–∞", callback_data="something_cancel")
    )
    return keyboard


def all_events_keyboard_to_delete(events: List[tables.Event]):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–æ –≤—Å–µ–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏"""
    keyboard = InlineKeyboardBuilder()

    for event in events:
        if event.title == "birthday":
            event_user = db.get_user_by_id(event.user_id)
            keyboard.row(
                InlineKeyboardButton(
                    text=f"{datetime.strftime(event.event_date, '%d.%m.%Y')} {event_user.user_name}",
                    callback_data=f"deleteEvent_{event.id}"),
            )
        else:
            keyboard.row(
                InlineKeyboardButton(
                    text=f"{datetime.strftime(event.event_date, '%d.%m.%Y')} {event.title}",
                    callback_data=f"deleteEvent_{event.id}"),
            )
    keyboard.adjust(2)

    keyboard.row(
        InlineKeyboardButton(
            text="<<–ù–∞–∑–∞–¥", callback_data="admin_back-b"
        )
    )
    return keyboard


def all_events_to_ping_keyboard(events: List[tables.Event]):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–æ –≤—Å–µ–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ –¥–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è"""
    keyboard = InlineKeyboardBuilder()

    for event in events:
        if event.title == "birthday":
            event_user = db.get_user_by_id(event.user_id)
            keyboard.row(
                InlineKeyboardButton(
                    text=f"{datetime.strftime(event.event_date, '%d.%m.%Y')} {event_user.user_name}",
                    callback_data=f"ping_{event.id}"),
            )
        else:
            keyboard.row(
                InlineKeyboardButton(
                    text=f"{datetime.strftime(event.event_date, '%d.%m.%Y')} {event.title}",
                    callback_data=f"ping_{event.id}"),
            )
    keyboard.adjust(2)

    keyboard.row(
        InlineKeyboardButton(
            text="–û–±–æ –≤—Å–µ—Ö", callback_data="ping_all"
        )
    )

    keyboard.row(
        InlineKeyboardButton(
            text="<<–ù–∞–∑–∞–¥", callback_data="admin_back-b"
        )
    )
    return keyboard


def phone_choose_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ–ø–ª–∞—Ç—ã –≤ —Å–æ–±—ã—Ç–∏–∏"""
    phones = config.PHONES

    keyboard = InlineKeyboardBuilder()
    for phone in phones:
        keyboard.row(
            InlineKeyboardButton(
                text=phone, callback_data=f"phone_{phone}"
            )
        )

    keyboard.row(InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="something_cancel"))

    return keyboard


def phone_choose_admin_keyboard(event_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è"""
    phones = config.PHONES

    keyboard = InlineKeyboardBuilder()
    for phone in phones:
        keyboard.row(
            InlineKeyboardButton(
                text=phone, callback_data=f"birthday-phone_{event_id}_{phone}"
            )
        )
    return keyboard
